buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
    }
}

apply plugin: 'android'

repositories{

    mavenCentral()

    maven { url 'http://macmini.detroitlabs.com:8081/nexus/content/repositories/thirdparty' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }


}

ext.androidAnnotationsVersion = "3.0"

configurations {
    compile
    apt.extendsFrom(compile)
}

dependencies {
    compile 'android.support:compatibility-v13:13'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'
    compile 'org.twitter4j:twitter4j:3.0.3'
    compile 'com.detroitlabs.commons:android-commons:1.0.1'
    compile ('com.facebook.android:facebook-sdk-aar:3.0.0'){
        exclude module: 'support-v4'
    }
    compile "org.androidannotations:androidannotations-api:${androidAnnotationsVersion}"
    compile 'com.android.volley:volley:1.0'
    compile 'com.squareup.picasso:picasso:1.1.1'
    compile ('com.google.android.gms:play-services:3.1.36'){
        exclude module: 'support-v4'
    }
    apt "org.androidannotations:androidannotations:${androidAnnotationsVersion}"
}

android {
    compileSdkVersion 17
    buildToolsVersion "17.0.0"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 17
    }

    packagingOptions{
        exclude 'META-INF/license.txt'
        exclude 'META-INF/notice.txt'
    }

    sourceSets{
        main{
            java.srcDirs = ['src/main/apt_generated', 'src/main/java', 'src/main/assets', 'src/main/res']
        }
    }
}

/* annotations stuff */
def getSourceSetName(variant) {
    return new File(variant.dirName).getName();
}

android.applicationVariants.all { variant ->
    def aptOutputDir = project.file("build/source/apt")
    def aptOutput = new File(aptOutputDir, variant.dirName)
    println "****************************"
    println "variant: ${variant.name}"
    println "manifest:  ${variant.processResources.manifestFile}"
    println "aptOutput:  ${aptOutput}"
    println "****************************"

    android.sourceSets[getSourceSetName(variant)].java.srcDirs += aptOutput.getPath()

    variant.javaCompile.options.compilerArgs += [
            '-processorpath', configurations.apt.getAsPath(),
            '-processor', 'org.androidannotations.AndroidAnnotationProcessor',
            '-AandroidManifestFile=' + variant.processResources.manifestFile,
            '-s', aptOutput
    ]

    variant.javaCompile.source = variant.javaCompile.source.filter { p ->
        return !p.getPath().startsWith(aptOutputDir.getPath())
    }

    variant.javaCompile.doFirst {
        aptOutput.mkdirs()
    }
}
/* end of annotations stuff */
